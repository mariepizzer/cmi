{"version":3,"file":"js/custom/new_user.js","mappings":";;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,uBAAuB;AACvB,gCAAgC;AAChC;AACA;AACA,OAAO;AACP,MAAM;AACN,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://metronic/../assets/src/js/custom/new_user.js"],"sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTNewUser = function () {\r\n\t// Elements\r\n\tvar form;\r\n\tvar submitButton;\r\n\tvar validator;\r\n\tvar passwordMeter;\r\n\r\n\t// Handle form\r\n\tvar handleForm = function (e) {\r\n\t\t// Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n\t\tvalidator = FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\t'first-name': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'First Name is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'last-name': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Last Name is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'email': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Email address is required'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\temailAddress: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value is not a valid email address'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'password': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'The password is required'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tcallback: {\r\n\t\t\t\t\t\t\t\tmessage: 'Please enter valid password',\r\n\t\t\t\t\t\t\t\tcallback: function (input) {\r\n\t\t\t\t\t\t\t\t\tif (input.value.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\treturn validatePassword();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'confirm-password': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'The password confirmation is required'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tidentical: {\r\n\t\t\t\t\t\t\t\tcompare: function () {\r\n\t\t\t\t\t\t\t\t\treturn form.querySelector('[name=\"password\"]').value;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tmessage: 'The password and its confirm are not the same'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toc': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'You must accept the terms and conditions'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger({\r\n\t\t\t\t\t\tevent: {\r\n\t\t\t\t\t\t\tpassword: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\r\n\t\t\t\t\t\trowSelector: '.fv-row',\r\n\t\t\t\t\t\teleInvalidClass: '',\r\n\t\t\t\t\t\teleValidClass: ''\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Handle form submit\r\n\t\tsubmitButton.addEventListener('click', function (e) {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tvalidator.revalidateField('password');\r\n\r\n\t\t\tvalidator.validate().then(function (status) {\r\n\t\t\t\tif (status == 'Valid') {\r\n\t\t\t\t\t// Show loading indication\r\n\t\t\t\t\tsubmitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n\t\t\t\t\t// Disable button to avoid multiple click \r\n\t\t\t\t\tsubmitButton.disabled = true;\r\n\r\n\t\t\t\t\t// Simulate ajax request\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t// Hide loading indication\r\n\t\t\t\t\t\tsubmitButton.removeAttribute('data-kt-indicator');\r\n\r\n\t\t\t\t\t\t// Enable button\r\n\t\t\t\t\t\tsubmitButton.disabled = false;\r\n\r\n\t\t\t\t\t\t// Show message popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\ttext: \"You created a new account!\",\r\n\t\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).then(function (result) {\r\n\t\t\t\t\t\t\tif (result.isConfirmed) {\r\n\t\t\t\t\t\t\t\tform.reset();  // reset form                    \r\n\t\t\t\t\t\t\t\tpasswordMeter.reset();  // reset password meter\r\n\t\t\t\t\t\t\t\tform.submit();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, 1500);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Show error popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Handle password input\r\n\t\tform.querySelector('input[name=\"password\"]').addEventListener('input', function () {\r\n\t\t\tif (this.value.length > 0) {\r\n\t\t\t\tvalidator.updateFieldStatus('password', 'NotValidated');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Password input validation\r\n\tvar validatePassword = function () {\r\n\t\treturn (passwordMeter.getScore() === 100);\r\n\t}\r\n\r\n\t// Public functions\r\n\treturn {\r\n\t\t// Initialization\r\n\t\tinit: function () {\r\n\t\t\t// Elements\r\n\t\t\tform = document.querySelector('#kt_sign_up_form');\r\n\t\t\tsubmitButton = document.querySelector('#kt_sign_up_submit');\r\n\t\t\tpasswordMeter = KTPasswordMeter.getInstance(form.querySelector('[data-kt-password-meter=\"true\"]'));\r\n\r\n\t\t\thandleForm();\r\n\t\t}\r\n\t};\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n\tKTNewUser.init();\r\n});\r\n"],"names":[],"sourceRoot":""}